var documenterSearchIndex = {"docs":
[{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Modules","page":"API","title":"Modules","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:module]","category":"page"},{"location":"api/#Types-and-constants","page":"API","title":"Types and constants","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:type, :constant]","category":"page"},{"location":"api/#Functions-and-macros","page":"API","title":"Functions and macros","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Order = [:macro, :function]","category":"page"},{"location":"api/#Documentation","page":"API","title":"Documentation","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"Modules = [AffineMaps]\nOrder = [:module, :type, :constant, :macro, :function]","category":"page"},{"location":"api/#AffineMaps.AffineMaps","page":"API","title":"AffineMaps.AffineMaps","text":"AffineMaps\n\nImplements affine transformations in a modular way.\n\n\n\n\n\n","category":"module"},{"location":"api/#AffineMaps.AffineMap","page":"API","title":"AffineMaps.AffineMap","text":"const AffineMap{N,FS<:NTuple{N,AffineStep}} = FunctionChain{FS}\n\nRepresents an affine transformation.\n\n\n\n\n\n","category":"type"},{"location":"api/#AffineMaps.AffineStep","page":"API","title":"AffineMaps.AffineStep","text":"struct AffineStep\n\nRepresents a multiplicative or additive step in an affine transformation or it's inverse.\n\nMultiplicative step are left-applied, additive steps are right-applied:\n\nAffineStep(*, k)(x) ≈ k * x\nAffineStep(+, k)(x) ≈ x + k\nAffineStep(\\, k)(x) ≈ k \\ x\nAffineStep(-, k)(x) ≈ x - k\n\nAffineStep(op, k) supports InverseFunctions.inverse and ChangesOfVariables.with_logabsdet_jacobian.\n\n\n\n\n\n","category":"type"},{"location":"LICENSE/#LICENSE","page":"LICENSE","title":"LICENSE","text":"","category":"section"},{"location":"LICENSE/","page":"LICENSE","title":"LICENSE","text":"using Markdown\nMarkdown.parse_file(joinpath(@__DIR__, \"..\", \"..\", \"LICENSE.md\"))","category":"page"},{"location":"#AffineMaps.jl","page":"Home","title":"AffineMaps.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"AffineMaps.jl implements in a modular way. It is built on top of FunctionChains.jl and supports InverseFunctions.jl and ChangesOfVariables.jl.","category":"page"}]
}
